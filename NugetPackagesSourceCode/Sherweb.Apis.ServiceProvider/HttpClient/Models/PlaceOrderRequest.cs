// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Sherweb.Apis.ServiceProvider.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class PlaceOrderRequest
    {
        /// <summary>
        /// Initializes a new instance of the PlaceOrderRequest class.
        /// </summary>
        public PlaceOrderRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PlaceOrderRequest class.
        /// </summary>
        /// <param name="orderedOn">Format: yyyy-MM-ddTHH:mm:ss.fffffffK (UTC).
        /// Example : 2023-11-21T20:27:05.7613888
        /// When no value is provided, the time of the request is used.</param>
        public PlaceOrderRequest(IList<CartItem> cartItems, string orderedBy = default(string), System.DateTime? orderedOn = default(System.DateTime?))
        {
            CartItems = cartItems;
            OrderedBy = orderedBy;
            OrderedOn = orderedOn;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cartItems")]
        public IList<CartItem> CartItems { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "orderedBy")]
        public string OrderedBy { get; set; }

        /// <summary>
        /// Gets or sets format: yyyy-MM-ddTHH:mm:ss.fffffffK (UTC). Example :
        /// 2023-11-21T20:27:05.7613888
        /// When no value is provided, the time of the request is used.
        /// </summary>
        [JsonProperty(PropertyName = "orderedOn")]
        public System.DateTime? OrderedOn { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CartItems == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CartItems");
            }
            if (CartItems != null)
            {
                foreach (var element in CartItems)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
