// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Sherweb.Apis.ServiceProvider.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Null for subscriptions that will not auto-renew at the end of the
    /// commitment term
    /// </summary>
    public partial class SubscriptionRenewalConfiguration
    {
        /// <summary>
        /// Initializes a new instance of the SubscriptionRenewalConfiguration
        /// class.
        /// </summary>
        public SubscriptionRenewalConfiguration()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SubscriptionRenewalConfiguration
        /// class.
        /// </summary>
        /// <param name="renewalDate">The first day of the next commitment
        /// term</param>
        /// <param name="scheduledQuantity">In the absence of a
        /// ScheduledQuantity, the subscription will renew with the existing
        /// quantity</param>
        public SubscriptionRenewalConfiguration(System.DateTime renewalDate, int? scheduledQuantity = default(int?))
        {
            RenewalDate = renewalDate;
            ScheduledQuantity = scheduledQuantity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the first day of the next commitment term
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "renewalDate")]
        public System.DateTime RenewalDate { get; set; }

        /// <summary>
        /// Gets or sets in the absence of a ScheduledQuantity, the
        /// subscription will renew with the existing quantity
        /// </summary>
        [JsonProperty(PropertyName = "scheduledQuantity")]
        public int? ScheduledQuantity { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
