// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Sherweb.Apis.ServiceProvider.Models
{
    /// <summary> A product is constituted of one or multiple charges. </summary>
    public partial class Charge
    {
        /// <summary> Initializes a new instance of Charge. </summary>
        internal Charge()
        {
        }

        /// <summary> Initializes a new instance of Charge. </summary>
        /// <param name="productName"> . </param>
        /// <param name="sku"> . </param>
        /// <param name="chargeId"> . </param>
        /// <param name="chargeName"> . </param>
        /// <param name="chargeType">
        /// Setup (occurs only once and can be used for activation, cancellation or setup fees),
        /// 
        /// Recurring (invoiced on a monthly or yearly basis),
        /// 
        /// Usage (varies based on the quantity of the product or service consumed by the customer),
        /// 
        /// Unknown (charge type not found. This may happen when querying data from older invoices).
        /// </param>
        /// <param name="billingCycleType">
        /// OneTime (charged once, with no recurrence),
        /// 
        /// Monthly (charged monthly),
        /// 
        /// Yearly (charged yearly).
        /// </param>
        /// <param name="periodFrom"> . </param>
        /// <param name="periodTo"> . </param>
        /// <param name="quantity"> . </param>
        /// <param name="costPrice"> Price paid per unit. </param>
        /// <param name="costPriceProrated"> Prorated price paid per unit. </param>
        /// <param name="currency"> . </param>
        /// <param name="isProratable"> Indicates whether or not the price of the charge is proratable. </param>
        internal Charge(string productName, string sku, Guid? chargeId, string chargeName, ChargeType? chargeType, BillingCycleType? billingCycleType, DateTimeOffset? periodFrom, DateTimeOffset? periodTo, double? quantity, double? costPrice, double? costPriceProrated, string currency, bool? isProratable)
        {
            ProductName = productName;
            Sku = sku;
            ChargeId = chargeId;
            ChargeName = chargeName;
            ChargeType = chargeType;
            BillingCycleType = billingCycleType;
            PeriodFrom = periodFrom;
            PeriodTo = periodTo;
            Quantity = quantity;
            CostPrice = costPrice;
            CostPriceProrated = costPriceProrated;
            Currency = currency;
            IsProratable = isProratable;
        }

        public string ProductName { get; }
        public string Sku { get; }
        public Guid? ChargeId { get; }
        public string ChargeName { get; }
        /// <summary>
        /// Setup (occurs only once and can be used for activation, cancellation or setup fees),
        /// 
        /// Recurring (invoiced on a monthly or yearly basis),
        /// 
        /// Usage (varies based on the quantity of the product or service consumed by the customer),
        /// 
        /// Unknown (charge type not found. This may happen when querying data from older invoices).
        /// </summary>
        public ChargeType? ChargeType { get; }
        /// <summary>
        /// OneTime (charged once, with no recurrence),
        /// 
        /// Monthly (charged monthly),
        /// 
        /// Yearly (charged yearly).
        /// </summary>
        public BillingCycleType? BillingCycleType { get; }
        public DateTimeOffset? PeriodFrom { get; }
        public DateTimeOffset? PeriodTo { get; }
        public double? Quantity { get; }
        /// <summary> Price paid per unit. </summary>
        public double? CostPrice { get; }
        /// <summary> Prorated price paid per unit. </summary>
        public double? CostPriceProrated { get; }
        public string Currency { get; }
        /// <summary> Indicates whether or not the price of the charge is proratable. </summary>
        public bool? IsProratable { get; }
    }
}
